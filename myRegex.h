#include <string>
#include <vector>

#define MHPP(arg) // arg is for makeheaderspp.exe, to be ignored by compiler
class myRegex {
    MHPP("begin myRegex") // === autogenerated code. Do not edit ===
    public:
    	static myRegex txt(const ::std::string& text);
    	myRegex operator+(const myRegex& arg) const;
    	const void* test();
    	static myRegex regex(const ::std::string& re, bool isGroup);
    	myRegex capture(const ::std::string& name);
    protected:
    	myRegex(const ::std::string& expr, bool isGroup);
    	myRegex makeGrp() const;
    MHPP("end myRegex")
   protected:
   // expression in human-readable regex format
    ::std::string expr;
    // whether or not expr needs to be enclosed in group before a quantifier e.g. * is applied 
    bool isGroup;
    // named captures in order of appearance
    ::std::vector<::std::string> captureNames;
};